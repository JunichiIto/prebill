version: 2.1
jobs:
  build:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: user
          RAILS_ENV: test
      - image: circleci/postgres:11.3-alpine
        environment:
          POSTGRES_USER: user
          POSTGRES_DB: user_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - run:
          name: Which bundler?
          command: bundle -v

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - rails-yarn-{{ checksum "yarn.lock" }}
            - rails-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: rails-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: rubocop
          command: |
            bundle exec rubocop -c .rubocop.yml

      - run:
          name: Run minitest in parallel
          command: |
            ./bin/test

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs
